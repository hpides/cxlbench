name: CMake Build + Test

on: [push]

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      GCC: gcc-${{matrix.gcc}}
      GXX: g++-${{matrix.gcc}}
      CLANG: clang-${{matrix.clang}}
      CLANGXX: clang++-${{matrix.clang}}

    strategy:
      matrix:
        build-type: [Release, Debug]
        gcc: [12]
        clang: [14]

    steps:
    - uses: actions/checkout@v2

    - name: Get Compiler Versions
      run: |
        sudo apt update
        sudo apt install $GCC $GXX $CLANG
        $GCC --version && $GXX --version && $CLANG --version && $CLANGXX --version

    - name: Create Build Environment
      run: |
        sudo apt install -y libnuma-dev
        cmake -E make_directory ${{runner.workspace}}/build-gcc
        cmake -E make_directory ${{runner.workspace}}/build-clang

    - name: Configure CMake GCC
      shell: bash
      working-directory: ${{runner.workspace}}/build-gcc
      run: cmake $GITHUB_WORKSPACE -DCMAKE_C_COMPILER=$GCC -DCMAKE_CXX_COMPILER=$GXX -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DIS_CI_BUILD=ON

    - name: Configure CMake Clang
      shell: bash
      working-directory: ${{runner.workspace}}/build-clang
      run: cmake $GITHUB_WORKSPACE -DCMAKE_C_COMPILER=$CLANG -DCMAKE_CXX_COMPILER=$CLANGXX -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TEST=ON -DIS_CI_BUILD=ON

    - name: Build GCC
      working-directory: ${{runner.workspace}}/build-gcc
      shell: bash
      run: cmake --build . --config ${{ matrix.build-type }} -- -j

    - name: Build Clang
      working-directory: ${{runner.workspace}}/build-clang
      shell: bash
      run: cmake --build . --config ${{ matrix.build-type }} -- -j

    - name: Test GCC
      working-directory: ${{runner.workspace}}/build-gcc
      shell: bash
      run: ctest -R mema-test -V

    - name: Test Clang
      working-directory: ${{runner.workspace}}/build-clang
      shell: bash
      run: ctest -R mema-test -V
